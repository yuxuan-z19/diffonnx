name: Test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      UV_HTTP_TIMEOUT: 120
      UV_CACHE_DIR: /tmp/.uv-cache
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv and set up python
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        python-version: ${{ matrix.python-version }}

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}-${{ matrix.python-version }}
            uv-${{ runner.os }}

    - name: Install the project
      run: uv sync --locked --group test

    - name: Run tests
      run: uv run pytest test -n auto

    - name: Minimize uv cache
      run: uv cache prune --ci